class Solution:
    def minOperations(self, nums):
        maxi = 0  # Initialize a variable to store the maximum count of consecutive numbers
        count = 0  # Initialize a variable to keep track of the current count of consecutive numbers
        n = len(nums) - 1  # Calculate the maximum possible difference between numbers
        l = 0  # Initialize a variable to keep track of the modified length of the 'nums' list

        nums.sort()  # Sort the input list 'nums' in ascending order

        # Remove duplicates in 'nums' and update 'l' with the modified length
        i = 0
        while i < len(nums):
            if i + 1 < len(nums) and nums[i] == nums[i + 1]:
                i += 1
                continue
            nums[l] = nums[i]
            l += 1
            i += 1

        # Calculate the maximum count of consecutive numbers
        i = 0
        j = 0
        while i < l:
            while j < l and (nums[j] - nums[i]) <= n:
                count += 1
                j += 1
            maxi = max(maxi, count)
            count -= 1
            i += 1

        # Calculate and return the minimum number of operations needed to make the numbers consecutive
        return len(nums) - maxi
